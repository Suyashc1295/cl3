//SecurePassword.java
public class SecurePassword {
	
	public String Password;
	SecurePassword(String str)
	{
		Password = str;
	}

}


//UnsecurePassword.java
public class UnsecurePassword {

	public String Password;
	UnsecurePassword(String str)
	{
		Password = str;
	}
	
}


//EncryptPassword.java
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class EncryptPassword {
	
	byte[] Password;

	EncryptPassword(SecurePassword SP) throws NoSuchAlgorithmException, UnsupportedEncodingException
	{
		MessageDigest SHA = MessageDigest.getInstance("MD5");
		Password = SHA.digest(SP.Password.getBytes("UTF-8"));
	}
	
	EncryptPassword(UnsecurePassword USP) throws NoSuchAlgorithmException, UnsupportedEncodingException
	{
		MessageDigest MD5 = MessageDigest.getInstance("SHA-1");
		Password = MD5.digest(USP.Password.getBytes("UTF-8"));
	}
	
	byte[] getEncryptedPassword()
	{
		return Password;
	}
	
}


//App.java

import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class App {
	
	public static boolean containsUCL(String str) {        
		Pattern p = Pattern.compile("[A-Z]", Pattern.CANON_EQ);
		Matcher m = p.matcher(str);
		return m.find();		
	}
	
	public static boolean containsNumber(String str){
		Pattern p = Pattern.compile("[0-9]", Pattern.CASE_INSENSITIVE);
		Matcher m = p.matcher(str);
		return m.find();
	}
	
	public static boolean containsSpecialChars(String str){
		Pattern p = Pattern.compile("[^a-z0-9 ]", Pattern.CASE_INSENSITIVE);
		Matcher m = p.matcher(str);
		return m.find();	}

	public static void main(String[] args) {
		
		System.out.println("Enter password to be encrypted:");
		Scanner Input = new Scanner(System.in);
		String str = Input.nextLine();
		Input.close();
		EncryptPassword Cipher = null;
		
		if(!containsUCL(str)  && !containsNumber(str) && !containsSpecialChars(str))
		{   System.out.println("calling Secured Hash method.\n");
			try {
				Cipher = new EncryptPassword(new SecurePassword(str));
			} catch (NoSuchAlgorithmException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		else
		{	System.out.println("Calling unsecured Hash method.\n");
			try {
				Cipher = new EncryptPassword(new UnsecurePassword(str));
			} catch (NoSuchAlgorithmException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
			System.out.println("Encrypted string : "+ Arrays.toString(Cipher.getEncryptedPassword()));
		
		
		
	}

}
---------------------------------------------------------------------------------
Output:

Enter password to be encrypted:
password
Calling Secured Hash method.

Encrypted string : [91, -86, 97, -28, -55, -71, 63, 63, 6, -126, 37, 11, 108, -8, 51, 27, 126, -26, -113, -40]

Enter password to be encrypted:
Password123
Calling unsecured Hash method.

Encrypted string : [66, -9, 73, -83, -25, -7, -31, -107, -65, 71, 95, 55, -92, 76, -81, -53]
